
package com.example.soap.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LogEntry", targetNamespace = "http://service.soap.example.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LogEntry {


    /**
     * 
     * @param changeType
     * @param from
     * @param to
     * @return
     *     returns java.util.List<com.example.soap.service.Log>
     * @throws LogFault_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listLog", targetNamespace = "http://service.soap.example.com/", className = "com.example.soap.service.ListLog")
    @ResponseWrapper(localName = "listLogResponse", targetNamespace = "http://service.soap.example.com/", className = "com.example.soap.service.ListLogResponse")
    @Action(input = "http://service.soap.example.com/LogEntry/listLogRequest", output = "http://service.soap.example.com/LogEntry/listLogResponse", fault = {
        @FaultAction(className = LogFault_Exception.class, value = "http://service.soap.example.com/LogEntry/listLog/Fault/LogFault")
    })
    public List<Log> listLog(
        @WebParam(name = "from", targetNamespace = "")
        String from,
        @WebParam(name = "to", targetNamespace = "")
        String to,
        @WebParam(name = "changeType", targetNamespace = "")
        String changeType)
        throws LogFault_Exception
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     * @throws LogFault_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "clearLog", targetNamespace = "http://service.soap.example.com/", className = "com.example.soap.service.ClearLog")
    @ResponseWrapper(localName = "clearLogResponse", targetNamespace = "http://service.soap.example.com/", className = "com.example.soap.service.ClearLogResponse")
    @Action(input = "http://service.soap.example.com/LogEntry/clearLogRequest", output = "http://service.soap.example.com/LogEntry/clearLogResponse", fault = {
        @FaultAction(className = LogFault_Exception.class, value = "http://service.soap.example.com/LogEntry/clearLog/Fault/LogFault")
    })
    public String clearLog()
        throws LogFault_Exception
    ;

}
